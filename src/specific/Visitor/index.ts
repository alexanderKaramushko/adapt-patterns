/**
 * @description Паттерн посетитель позволяет выносить методы из классы,
 * чтобы не засорять его и чтобы централизировать обращения к этим методам
 * @example Обработка множественых дефектов через посетителя
 */

import { Defect1, Defect2, DefectsVisitor } from './implementations';

const defects = [
  new Defect1(),
  new Defect2(),
];

/** Число дефектов может быть большим, поэтому обработка состояния определенного дефекта
 *  выноситься в посетителя, которые централизует обработку операций, которые
 *  засоряли бы исходные классы дефектов, то есть делегирует выполнение этих операций в посетитель
*/
const defectsVisitor = new DefectsVisitor();

defects.forEach((defect) => {
  defect.accept(defectsVisitor);
});
